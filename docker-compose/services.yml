version: '3.7'
services:
  keycloak-authorization-server:
    image: quay.io/keycloak/keycloak:${KEYCLOAK_VERSION:-latest}
    hostname: keycloak-server
    ports:
      - "9091:9091"
    environment:
      - "KEYCLOAK_USER=admin"
      - "KEYCLOAK_PASSWORD=admin"
      - "JAVA_OPTS=-Djboss.http.port=9091"
      - "DB_VENDOR=POSTGRES"
      - "DB_ADDR=host.docker.internal"
      - "DB_DATABASE=keycloak"
      - "DB_USER=keycloak"
      - "DB_SCHEMA=keycloak"
      - "DB_PASSWORD=keycloak"
    networks:
      - ${GLOBAL_NETWORK:-services}
#  twitter-to-kafka-service:
#    image: ${GROUP_ID}/twitter.to.kafka.service:${SERVICE_VERSION:-latest}
#    ports:
#      - "5005:5005"
#    volumes:
#      - "./docker-logs:/workspace/twitter-to-kafka-service/logs"
#      - "./check-config-server-started.sh:/usr/local/bin/check-config-server-started.sh"
#    user: root
#    entrypoint: ["check-config-server-started.sh"]
#    depends_on:
#      - config-server
#      - kafka-broker-1
#      - kafka-broker-2
#      - kafka-broker-3
#    environment:
#      - "JAVA_OPTS=-agentlib:jdwp=transport=dt_socket,server=y,suspend=n,address=*:5005 -Xms128m -Xmx256m"
#      - "LOGGING_LEVEL_COM_MICROSERVICES_DEMO=error"
#      - "LOGGING_LEVEL_ROOT=error"
#      - "KAFKA-CONFIG_TOPIC-NAME=twitter-topic"
#      - "KAFKA-CONFIG_BOOTSTRAP-SERVERS=kafka-broker-1:9092, kafka-broker-2:9092, kafka-broker-3:9092"
#      - "KAFKA-CONFIG_SCHEMA-REGISTRY-URL=http://schema-registry:8081"
#      - "TWITTER-TO-KAFKA-SERVICE_ENABLE-MOCK-TWEETS=true"
#      - "SPRING_CLOUD_CONFIG_URI=http://config-server:8888"
#      - "ENCRYPT_KEY=${ENCRYPT_KEY}"
#    networks:
#      - ${GLOBAL_NETWORK:-services}
#  kafka-to-elastic-service:
#    image: ${GROUP_ID}/kafka.to.elastic.service:${SERVICE_VERSION:-latest}
#    ports:
#      - "5006:5006"
#    volumes:
#      - "./docker-logs:/workspace/kafka-to-elastic-service/logs"
#      - "./check-kafka-topics-created.sh:/usr/local/bin/check-kafka-topics-created.sh"
#    user: root
#    entrypoint: ["check-kafka-topics-created.sh"]
#    depends_on:
#      - config-server
#      - twitter-to-kafka-service
#      - kafka-broker-1
#      - kafka-broker-2
#      - kafka-broker-3
#      - elastic-1
#      - elastic-2
#      - elastic-3
#    environment:
#      - "JAVA_OPTS=-agentlib:jdwp=transport=dt_socket,server=y,suspend=n,address=*:5006 -Xms128m -Xmx256m"
#      - "LOGGING_LEVEL_COM_MICROSERVICES_DEMO=error"
#      - "LOGGING_LEVEL_ROOT=error"
#      - "KAFKA-CONFIG_TOPIC-NAME=twitter-topic"
#      - "KAFKA-CONFIG_BOOTSTRAP-SERVERS=kafka-broker-1:9092, kafka-broker-2:9092, kafka-broker-3:9092"
#      - "KAFKA-CONFIG_SCHEMA-REGISTRY-URL=http://schema-registry:8081"
#      - "SPRING_CLOUD_CONFIG_URI=http://config-server:8888"
#      - "ELASTIC-CONFIG_INDEX-NAME=twitter-index"
#      - "ELASTIC-CONFIG_CONNECTION-URL=http://elastic-1:9200"
#      - "ENCRYPT_KEY=${ENCRYPT_KEY}"
#    networks:
#      - ${GLOBAL_NETWORK:-services}
  config-server:
    image: ${GROUP_ID}/config.server:${SERVICE_VERSION:-latest}
    ports:
      - "5007:5007"
      - "8888:8888"
    volumes:
      - "./docker-logs:/workspace/config-server/logs"
    environment:
      - "JAVA_OPTS=-agentlib:jdwp=transport=dt_socket,server=y,suspend=n,address=*:5007 -Xms128m -Xmx256m"
      - "ENCRYPT_KEY=${ENCRYPT_KEY}"
    networks:
      - ${GLOBAL_NETWORK:-services}
  elastic-query-service-1:
    image: ${GROUP_ID}/elastic.query.service:${SERVICE_VERSION:-latest}
    ports:
      - "5008:5008"
      - "8183:8183"
    volumes:
      - "./docker-logs:/workspace/elastic-query-service/logs"
      - "./check-config-server-started.sh:/usr/local/bin/check-config-server-started.sh"
      - "./check-keycloak-server-started.sh:/usr/local/bin/check-keycloak-server-started.sh"
    user: root
    entrypoint: [ "check-config-server-started.sh" ]
    depends_on:
      - config-server
      - elastic-1
      - elastic-2
      - elastic-3
    environment:
      - "JAVA_OPTS=-agentlib:jdwp=transport=dt_socket,server=y,suspend=n,address=*:5008 -Xms128m -Xmx256m"
      - "LOGGING_LEVEL_COM_MICROSERVICES_DEMO=debug"
      - "LOGGING_LEVEL_ROOT=debug"
      - "ELASTIC-CONFIG_INDEX-NAME=twitter-index"
      - "ELASTIC-CONFIG_CONNECTION-URL=http://elastic-1:9200"
      - "SERVER_PORT=8183"
      - "SERVER_SERVLET_CONTEXT-PATH=/elastic-query-service"
      - "SPRING_CLOUD_CONFIG_URI=http://config-server:8888"
      - "SPRING_SECURITY_OAUTH2_RESOURCESERVER_JWT_ISSUER-URI=http://keycloak-authorization-server:9091/auth/realms/microservices-realm"
      - "SPRING_SECURITY_OAUTH2_RESOURCESERVER_JWT_JWK-SET-URI=http://keycloak-authorization-server:9091/auth/realms/microservices-realm/protocol/openid-connect/certs"
      - "SPRING_DATASOURCE_URL=jdbc:postgresql://host.docker.internal:5432/postgres?currentSchema=public&binaryTransfer=true&reWriteBatchedInserts=true"
      - "ENCRYPT_KEY=${ENCRYPT_KEY}"
    networks:
      - ${GLOBAL_NETWORK:-services}
  elastic-query-service-2:
    image: ${GROUP_ID}/elastic.query.service:${SERVICE_VERSION:-latest}
    ports:
      - "5009:5009"
      - "8186:8186"
    volumes:
      - "./docker-logs:/workspace/elastic-query-service/logs"
      - "./check-config-server-started.sh:/usr/local/bin/check-config-server-started.sh"
      - "./check-keycloak-server-started.sh:/usr/local/bin/check-keycloak-server-started.sh"
    user: root
    entrypoint: [ "check-config-server-started.sh" ]
    depends_on:
      - config-server
      - elastic-1
      - elastic-2
      - elastic-3
    environment:
      - "JAVA_OPTS=-agentlib:jdwp=transport=dt_socket,server=y,suspend=n,address=*:5009 -Xms128m -Xmx256m"
      - "LOGGING_LEVEL_COM_MICROSERVICES_DEMO=info"
      - "LOGGING_LEVEL_ROOT=info"
      - "ELASTIC-CONFIG_INDEX-NAME=twitter-index"
      - "ELASTIC-CONFIG_CONNECTION-URL=http://elastic-1:9200"
      - "SERVER_PORT=8186"
      - "SERVER_SERVLET_CONTEXT-PATH=/elastic-query-service"
      - "SPRING_CLOUD_CONFIG_URI=http://config-server:8888"
      - "SPRING_SECURITY_OAUTH2_RESOURCESERVER_JWT_ISSUER-URI=http://keycloak-authorization-server:9091/auth/realms/microservices-realm"
      - "SPRING_SECURITY_OAUTH2_RESOURCESERVER_JWT_JWK-SET-URI=http://keycloak-authorization-server:9091/auth/realms/microservices-realm/protocol/openid-connect/certs"
      - "SPRING_DATASOURCE_URL=jdbc:postgresql://host.docker.internal:5432/postgres?currentSchema=public&binaryTransfer=true&reWriteBatchedInserts=true"
      - "SPRING_DATASOURCE_INITIALIZATION-MODE=never"
      - "ENCRYPT_KEY=${ENCRYPT_KEY}"
    networks:
      - ${GLOBAL_NETWORK:-services}
  elastic-query-web-client-1:
    image: ${GROUP_ID}/elastic.query.web.client:${SERVICE_VERSION:-latest}
    ports:
      - "5010:5010"
      - "8184:8184"
    volumes:
      - "./docker-logs:/workspace/elastic-query-web-client/logs"
      - "./check-config-server-started.sh:/usr/local/bin/check-config-server-started.sh"
      - "./check-keycloak-server-started.sh:/usr/local/bin/check-keycloak-server-started.sh"
    user: root
    entrypoint: [ "check-config-server-started.sh" ]
    depends_on:
      - config-server
    environment:
      - "JAVA_OPTS=-agentlib:jdwp=transport=dt_socket,server=y,suspend=n,address=*:5010 -Xms128m -Xmx256m"
      - "LOGGING_LEVEL_COM_MICROSERVICES_DEMO=debug"
      - "LOGGING_LEVEL_ROOT=debug"
      - "SERVER_PORT=8184"
      - "SERVER_SERVLET_CONTEXT-PATH=/elastic-query-web-client"
      - "SPRING_CLOUD_CONFIG_URI=http://config-server:8888"
      - "ELASTIC-QUERY-WEB-CLIENT_WEB-CLIENT_BASE-URL=http://elastic-query-service/elastic-query-service/documents"
      - "ELASTIC-QUERY-WEB-CLIENT_WEB-CLIENT_INSTANCES_0_ID=elastic-query-service-1"
      - "ELASTIC-QUERY-WEB-CLIENT_WEB-CLIENT_INSTANCES_0_HOST=elastic-query-service-1"
      - "ELASTIC-QUERY-WEB-CLIENT_WEB-CLIENT_INSTANCES_0_PORT=8183"
      - "ELASTIC-QUERY-WEB-CLIENT_WEB-CLIENT_INSTANCES_1_ID=elastic-query-service-2"
      - "ELASTIC-QUERY-WEB-CLIENT_WEB-CLIENT_INSTANCES_1_HOST=elastic-query-service-2"
      - "ELASTIC-QUERY-WEB-CLIENT_WEB-CLIENT_INSTANCES_1_PORT=8186"
      - "SPRING_SECURITY_OAUTH2_CLIENT_PROVIDER_KEYCLOAK_ISSUER-URI=http://keycloak-authorization-server:9091/auth/realms/microservices-realm"
      - "SECURITY_LOGOUT-SUCCESS-URL=http://elastic-query-web-client-1:8184/elastic-query-web-client"
      - "SECURITY_DEFAULT-CLIENT-REGISTRATION-ID=keycloak"
      - "ENCRYPT_KEY=${ENCRYPT_KEY}"
    networks:
      - ${GLOBAL_NETWORK:-services}
  elastic-query-web-client-2:
    image: ${GROUP_ID}/elastic.query.web.client.2:${SERVICE_VERSION:-latest}
    ports:
      - "5011:5011"
      - "8185:8185"
    volumes:
      - "./docker-logs:/workspace/elastic-query-web-client/logs"
      - "./check-config-server-started.sh:/usr/local/bin/check-config-server-started.sh"
      - "./check-keycloak-server-started.sh:/usr/local/bin/check-keycloak-server-started.sh"
    user: root
    entrypoint: [ "check-config-server-started.sh" ]
    depends_on:
      - config-server
    environment:
      - "JAVA_OPTS=-agentlib:jdwp=transport=dt_socket,server=y,suspend=n,address=*:5011 -Xms128m -Xmx256m"
      - "LOGGING_LEVEL_COM_MICROSERVICES_DEMO=debug"
      - "LOGGING_LEVEL_ROOT=debug"
      - "SERVER_PORT=8185"
      - "SERVER_SERVLET_CONTEXT-PATH=/elastic-query-web-client"
      - "SPRING_CLOUD_CONFIG_URI=http://config-server:8888"
      - "ELASTIC-QUERY-WEB-CLIENT_WEB-CLIENT_BASE-URL=http://elastic-query-service/elastic-query-service/documents"
      - "ELASTIC-QUERY-WEB-CLIENT_WEB-CLIENT_INSTANCES_0_ID=elastic-query-service-1"
      - "ELASTIC-QUERY-WEB-CLIENT_WEB-CLIENT_INSTANCES_0_HOST=elastic-query-service-1"
      - "ELASTIC-QUERY-WEB-CLIENT_WEB-CLIENT_INSTANCES_0_PORT=8183"
      - "ELASTIC-QUERY-WEB-CLIENT_WEB-CLIENT_INSTANCES_1_ID=elastic-query-service-2"
      - "ELASTIC-QUERY-WEB-CLIENT_WEB-CLIENT_INSTANCES_1_HOST=elastic-query-service-2"
      - "ELASTIC-QUERY-WEB-CLIENT_WEB-CLIENT_INSTANCES_1_PORT=8186"
      - "SPRING_SECURITY_OAUTH2_CLIENT_PROVIDER_KEYCLOAK_ISSUER-URI=http://keycloak-authorization-server:9091/auth/realms/microservices-realm"
      - "SECURITY_LOGOUT-SUCCESS-URL=http://elastic-query-web-client-2:8185/elastic-query-web-client"
      - "SECURITY_DEFAULT-CLIENT-REGISTRATION-ID=keycloak"
      - "ENCRYPT_KEY=${ENCRYPT_KEY}"
    networks:
      - ${GLOBAL_NETWORK:-services}